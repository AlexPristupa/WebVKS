<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MentolVKS</name>
    </assembly>
    <members>
        <member name="T:MentolVKS.Auth.UserName">
            <summary>
            Получение имени пользователя для передачи в сервисы
            </summary>
        </member>
        <member name="T:MentolVKS.Common.AjaxOperationResult">
            <summary>
            Результат Ajax вызова
            </summary>
        </member>
        <member name="M:MentolVKS.Common.AjaxOperationResult.Success(System.Object,System.String)">
            <summary>
            TODO Comment
            </summary>
            <param name="data"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Common.AjaxOperationResult.Error(System.String,System.Object)">
            <summary>
            TODO Comment
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Common.AjaxOperationResult.Error(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Common.AjaxOperationResult.Warning(System.String,System.Object)">
            <summary>
            Возвращает предупреждение на фронт.
            </summary>
            <param name="message">Общая информация по предупреждению.</param>
            <param name="data">Уточняющая информация по предупреждению.</param>
            <returns>Результат Ajax вызова.</returns>
        </member>
        <member name="T:MentolVKS.Common.ApiControllerBase">
            <summary>
            Базовый контроллер для API
            </summary>
        </member>
        <member name="F:MentolVKS.Common.ApiControllerBase._user">
            <summary>
            Текущий пользователь
            </summary>
        </member>
        <member name="M:MentolVKS.Common.ApiControllerBase.GetCurrentUserAsync">
            <summary>
            Возвращает текущего пользователя
            </summary>
        </member>
        <member name="M:MentolVKS.Common.ApiControllerBase.AddModelError(System.String,System.String)">
            <summary> A wrapper method for calling the ModelState.AddModelError() method.  </summary>
            <param name="key">The key of the ModelStateEntry to add errors to.</param>
            <param name="errorMessage">The error message to add.</param>
        </member>
        <member name="M:MentolVKS.Common.ApiControllerBase.Valid">
            <summary>
            Основная валидация через атрибуты в DTO (True - нет ошибки. False - есть ошибка).
            </summary>
            <returns>Результат валидации. True - нет ошибки. False - есть ошибка.</returns>
        </member>
        <member name="M:MentolVKS.Common.ApiControllerBase.Valid(System.Boolean,System.String)">
            <summary>
            Дополнительная валидация в методе контроллера (True - нет ошибки. False - есть ошибка).
            </summary>
            <param name="statement">Утверждение.</param>
            <param name="consequence">Следствие.</param>
            <returns>Результат валидации. True - нет ошибки. False - есть ошибка.</returns>
        </member>
        <member name="M:MentolVKS.Common.ApiControllerBase.PreLoadFactoryAsync(MentolVKS.Model.Filters.Dto.FilterQuery)">
            <summary>
            Подготовить и применить фабрику запросов
            </summary>
            <param name="listQuery">dto</param>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Common.ServerOperationResult">
            <summary>
                Базовый класс для результата операции сервера
            </summary>
        </member>
        <member name="P:MentolVKS.Common.ServerOperationResult.Result">
            <summary>
                TODO Comment
            </summary>
        </member>
        <member name="P:MentolVKS.Common.ServerOperationResult.Message">
            <summary>
                TODO Comment
            </summary>
        </member>
        <member name="T:MentolVKS.Common.ServerOperationResult`1">
            <summary>
                Базовый класс для результата операции сервера, возвращающей данные
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MentolVKS.Common.ServerOperationResult`1.Data">
            <summary>
                TODO Comment
            </summary>
        </member>
        <member name="T:MentolVKS.Controllers.AboutController">
            <summary>
            Контроллер для теста
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.AgGridVueController.GetNameFieldsAgGridVue(System.String)">
            <summary>
            Получить определение полей для Ag-Grid-Vue
            </summary>
            <param name="TableName">Имя таблицы</param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.AgGridVueController.PostSettingVisibleColumnsAgGridVue(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Устанавливает видимость колонок в гриде
            </summary>
            <param name="columnsFrontEnd">наименование видимых колонок таблицы</param>
        </member>
        <member name="M:MentolVKS.Controllers.AgGridVueController.PostSettingWidthColumnsAgGridVue(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Int32}})">
            <summary>
            Устанавливает ширину колонок
            </summary>
            <param name="columnsFrontEnd">колонка с заданной шириной</param>
        </member>
        <member name="M:MentolVKS.Controllers.AgGridVueController.GetNotFoundColumnValue(MentolVKS.Model.Filters.SelectColumnFilter)">
            <summary>
            Возвращает список ненайденых элементов фильтра
            </summary>
            <param name="columnName"></param>
            <param name="tableName"></param>
            <param name="checkList"></param>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Controllers.BookingController">
            <summary>
            Контроллер бронирования.
            </summary>
        </member>
        <member name="F:MentolVKS.Controllers.BookingController._logger">
            <summary>
            Локализация строк
            </summary>
        </member>
        <member name="F:MentolVKS.Controllers.BookingController._mapper">
            <summary>
            Маппирование объектов
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.#ctor(MentolVKS.Service.Contract.IService,Microsoft.Extensions.Logging.ILogger{MentolVKS.Controllers.BookingController},Microsoft.Extensions.Localization.IStringLocalizer{MentolVKS.Controllers.BookingController})">
            <inheritdoc/>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.Delete(System.Int32)">
            <summary>
            Удалить бронирование
            </summary>
            <param name="id">Идентификатор удаляемого бронирования</param>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.Get(System.Int32)">
            <summary>
            Получить бронирование.
            </summary>
            <param name="id">Идентификатор бронирования.</param>
            <returns>Асинхронная задача с результатом запроса.</returns>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.Post(MentolVKS.Models.BookingPostViewModel)">
            <summary>
            Добавить бронирование
            </summary>
            <param name="item">Добавляемое бронирование</param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.Put(MentolVKS.Models.BookingPutViewModel)">
            <summary>
            Обновить бронирование.
            </summary>
            <param name="item">Обновляемая бронь.</param>
            <returns>Результат выполнения.</returns>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.ConfigurePostMap(AutoMapper.IMapperConfigurationExpression)">
            <summary>
            Конфигурирует маппинг <see cref="T:MentolVKS.Models.BookingPostViewModel"/> на <see cref="T:MentolVKS.Model.BaseModel.Booking"/>.
            </summary>
            <param name="cfg">Данные конфигурации.</param>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.ConfigurePutMap(AutoMapper.IMapperConfigurationExpression)">
            <summary>
            Конфигурирует маппинг <see cref="T:MentolVKS.Models.BookingPutViewModel"/> на <see cref="T:MentolVKS.Model.BaseModel.Booking"/>.
            </summary>
            <param name="cfg">Данные конфигурации.</param>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.ConfigureGetMap(AutoMapper.IMapperConfigurationExpression)">
            <summary>
            Конфигурирует маппинг <see cref="T:MentolVKS.Models.BookingFullViewModel"/> на <see cref="T:MentolVKS.Model.BaseModel.Booking"/>.
            </summary>
            <param name="cfg">Данные конфигурации.</param>
        </member>
        <member name="M:MentolVKS.Controllers.BookingController.ConfigureBookingMap(AutoMapper.IMapperConfigurationExpression)">
            <summary>
            Конфигурирует маппинг <see cref="T:MentolVKS.Model.BaseModel.Booking"/> на <see cref="T:MentolVKS.Models.BookingFullViewModel"/>.
            </summary>
            <param name="cfg">Данные конфигурации.</param>
        </member>
        <member name="M:MentolVKS.Controllers.ColumnFilterController.Get(MentolVKS.Model.Filters.Dto.FilterQuery)">
             <summary>
             Применение колоночного фильтра на основе DTO полученного с фронта
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /api/ColumnFilter
                 {
                 
                     TableName: 'tar_notify_log',   Имя таблицы
                     Page: 1,                                Номер страницы для пагинации
                     Limit: 25,                              Размер страницы пагинации
                     TableSearchBy: 'ищем что-нибудь',       Значение быстрого поиска по колонкам
                     OrderBy: 'asc',                         Направление сортировки
                     SortField: 'DateRecord',                Сортируемое поле
                     DateStart: '29.10.2020',                Начальная дата фильтрации по диапазону дат
                     DateFinish: '30.10.2020',               Конечная дата фильтрации по диапазону дат  
                                                             Массив колоночных фильтров
                     Filters: [
                         {"tableName": "tar_notify_log", "nameField": "nameEmployee", "filterType": "select", "valuesField": ["6666"] },
                         {"tableName": "tar_notify_log", "nameField": "processingDate","filterType": "date","valuesField": [
                                             {"selectFirstContains": ">=", "valueFirstDateFilter": "31.10.2020", "timerFirstFilter": "00:00" }, 
                                             {"selectSecondContains": "=", "valueSecondDateFilter": "01.11.2020", "timeSecondFilter": "23:59" }]},        
                         {"tableName": "tar_notify_log","nameField": "attemptCount","filterType": "integer", "valuesField": [
                                             {
                                                 "operand": ">",
                                                 "compareValue": 1
                                             }]
                         },
                         {"tableName": "tar_notify_log", "nameField": "info", "filterType": "string", "valuesField": [
                                             {
                                                 "operand": "*~*",
                                                 "compareValue": "текст"
                                             }]
                         }
                     ],
                     ChkCurrentPageExport: true              Признак, определяющий выгрузку текущей страницы TableGridGeneral в внешний файл, иначе выгружается весь набор данных
                                                             Массив расширенных фильтров
                     ExtensionFilters:  [
                         {"tableName": "invExtensionPStatus", "nameField": "statusid", "filterType": "select", "valuesField": [1]},
                         {"tableName":"invExtensionPStatus","nameField":"datefrom","filterType":"date","valuesField":[
                                     {"selectFirstContains": "=", "valueFirstDateFilter": "21.04.2021", "timerFirstFilter": "00:00" }, 
                                     { "selectSecondContains": "=", "valueSecondDateFilter": "21.04.2021", "timeSecondFilter": "23:59" }]},
                     ],
                 }
                 
             Пример ответа:
             
                 AjaxOperationResult
                 {
                     result: 0,                              0 - Success, -1 - Error, -2 - Warning
                     message: 'Сообщение об ошибке или варнинге',
                     data: {Набор данных возвращаемый из базы данных}
                 }
             </remarks>
             <param name="listQuery">dto</param>
             <returns>Возвращаем отфильтрованный, отсортированный набор данных с применением пагинации в типе AjaxOperationResult</returns>
             <response code="200">Возвращает созданный AjaxOperationResult</response>
        </member>
        <member name="M:MentolVKS.Controllers.ColumnFilterController.EntityList">
            <summary>
            Получить связку таблицы с Vue, базы данных БД и сущности кода
            </summary>
            <response code="200">Возвращает id добавленной структуры</response>
            <response code="401">Пользователь не авторизован или не имеет прав доступа для соверщения данного действия</response>  
        </member>
        <member name="T:MentolVKS.Controllers.DirectoryController">
            <summary>
            Справочники
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.#ctor(MentolVKS.Service.Contract.IService,Microsoft.Extensions.Logging.ILogger{MentolVKS.Controllers.DirectoryController},Microsoft.Extensions.Localization.IStringLocalizer{MentolVKS.Controllers.DirectoryController})">
            <inheritdoc/>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.Space(System.String,System.Int32)">
            <summary>
            Комнаты / Space
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.ServerGroups(System.String,System.Int32)">
            <summary>
            Группа серверов/ServersGroups
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.PinPolitics(System.String,System.Int32)">
            <summary>
            PinPolitics
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.ConnectionType(System.String,System.Int32)">
            <summary>
            Тип подключения участников/ConnectionType
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.VksServer(System.String,System.Int32)">
            <summary>
            Сервера /VksServer
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.VksUser(System.String,System.Int32)">
            <summary>
            Пользователи/VksUser
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.TimeZone(System.String,System.Int32)">
            <summary>
            Временные зоны/TimeZone
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.BookingType(System.String,System.Int32)">
            <summary>
            Тип конференции/BookingType
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>        
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.AspNetUsers(System.String,System.Int32)">
            <summary>
            Пользователи/AspNetUser
            </summary>
            <param name="search">Значение для поиска</param>
            <param name="limit">Ограничение на количество записей</param>
            <returns></returns>        
        </member>
        <member name="M:MentolVKS.Controllers.DirectoryController.VksUserOther(System.String,System.Int32)">
            <summary>
            Внешние участники 
            </summary>
            <param name="search">Значение для поиска</param>
            <param name="limit">Ограничение на количество записей</param>
            <returns></returns>        
        </member>
        <member name="T:MentolVKS.Controllers.FileController">
            <summary>
            Контроллер для работы с файлами
            </summary>
        </member>
        <member name="T:MentolVKS.Controllers.LoginController">
            <summary>
            Авторизация
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.LoginController.#ctor(Microsoft.Extensions.Logging.ILogger{MentolVKS.Controllers.LoginController},MentolVKS.Service.Contract.IService,Microsoft.Extensions.Localization.IStringLocalizer{MentolVKS.Controllers.LoginController},Microsoft.AspNetCore.Hosting.IWebHostEnvironment,MentolVKS.LdapAuth.ILdapAuthInterface,Microsoft.Extensions.Options.IOptions{MentolVKS.Auth.Jwt.SessionSettings})">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="service"></param>
            <param name="userManager"></param>
            <param name="localizer"></param>
            <param name="env"></param>
        </member>
        <member name="M:MentolVKS.Controllers.LoginController.Post(MentolVKS.Model.AuthModel)">
            <summary>
            Авторизация
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.LoginController.LogOut">
            <summary>
            Выход из системы
            </summary>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.LoginController.RefreshToken(System.String)">
            <summary>
            Обновить token
            </summary>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Controllers.Params.AgGridVueDtParams">
            <summary>
            Возвращает основные параметры для AgGridVue на фронт сайта
            </summary>
        </member>
        <member name="P:MentolVKS.Controllers.Params.AgGridVueDtParams.ExceptionsSorting">
            <summary>
            Список полей исключаемых из сортировки на стороне клиента. 
            К примеру вычисляемые поля в проекциях, как результат работы хр. процедуры в sql server
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.Params.AgGridVueDtParams.PartyTableGridForVue(MentolVKS.Service.Contract.IService,System.Collections.Generic.IEnumerable{MentolVKS.Model.ViewModel.ColumnSettings})">
            <summary>
            Возвращает шапку таблицы со всеми настройками (сортировки, порядка следования, шириной) 
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.Params.AgGridVueDtParams.GetNamedDTObject(System.Collections.Generic.List{System.Object},System.Int32)">
            <summary>
            Получение данных для AgGridVue
            </summary>
            <param name="filteredData">Данные для таблицы</param>
            <param name="totalCount">Количество записей</param>
            <returns>Данные набора данных полученных в запросе</returns>
        </member>
        <member name="T:MentolVKS.Controllers.RecordingController">
            <summary>
            Бронирование - Записи
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.RecordingController.Delete(System.Int32)">
            <summary>
            Удалить запись
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:MentolVKS.Controllers.RecordingVksUsersController">
            <summary>
            Бронирование - Записи
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.RecordingVksUsersController.Post(MentolVKS.Models.RecordingVksUsersPostViewModel)">
            <summary>
            Добавление прав на записи
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.RecordingVksUsersController.Put(MentolVKS.Models.RecordingVksUsersPutViewModel)">
            <summary>
            Редактирование прав на записи
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.RecordingVksUsersController.Delete(System.Int32)">
            <summary>
            Удаление прав на записи
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:MentolVKS.Controllers.ScheduleController">
            <summary>
            Расписания
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.ScheduleController.SheduleText(MentolVKS.Models.ScheduleInputViewModel)">
            <summary>
            Отображение расписания
            </summary>
            <param name="search"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.ScheduleController.SheduleCheck(MentolVKS.Models.SheduleCheckInputModel)">
            <summary>
            Проверка расписания
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.Post(MentolVKS.Model.Filters.QueryFilter)">
            <summary>
            Фильтр с выборкой
            </summary>
            <remarks>
            Пример запроса:
            
                POST /api/SelectFilter
                {
                    FilterId: -1,                           Тип фильтра
                    ColumnName: 'DateRecord'                Имя колонки для фильтрации
                    TableName: 'tar_notify_log',   Имя таблицы
                    Search: 'что-то ищем',                  Строка поиска
                    Limit: 'Ограничение по выборке 0 - без ограничения',        Строка поиска
                    CheckList: ['да', 'нет']                Список выбранных значений в колоночном фильтре
                    AddParameters: []                       Дополнительные параметры в vue компонентах не используется, используется в jquery
                    
            Пример ответа:
            
                AjaxOperationResult
                {
                    result: 0,                              0 - Success, -1 - Error, -2 - Warning
                    message: 'Сообщение об ошибке или варнинге',
                    data: {Набор данных возвращаемый из базы данных}
                }
            </remarks>
            <param name="queryFilter"></param>
            <returns>Возвращаем отфильтрованный, отсортированный набор данных с применением пагинации в типе AjaxOperationResult для фильтра типа select</returns>
            <response code="200">Возвращает созданный AjaxOperationResult</response>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetListPostForStructureReuseAsync(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Получить списки переиспользуемые в фильтре выбора
            </summary>
            <param name="checksList"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetRowsFilter(System.Collections.Generic.IEnumerable{MentolVKS.Model.BaseModel.ColumnForStringFilter},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Получить список относительно structureId
            </summary>
            <param name="rows">Полный список</param>
            <param name="checksList">Список выбора</param>
            <returns>Отфильтрованный список</returns>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetSelectListFilterName(System.String)">
            <summary>
            Получает список значений для фильтра
            </summary>
            <param name="tableName">Наименование таблицы</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetSelectListFilterNames(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Получает список значений для фильтра
            </summary>
            <param name="tableName">Наименование таблицы</param>
            <param name="userName">Имя пользователя</param>
            <param name="isCommon">Общий фильтр</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.SaveFilter(MentolVKS.Model.Filters.SaveFiltersDto)">
            <summary>
            Сохраняет фильтры из комбика
            </summary>
            <param name="saveFiltersDto">Dto сохраняемых фильтров</param>       
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.AddNewFilterValuesAsync(MentolVKS.Model.Filters.Dto.ColumnFiltersDto,System.Int32,MentolVKS.Model.BaseModel.FilterColumnsList)">
            <summary>
            Добавляет значение фильтра
            </summary>
            <param name="f">Данные фильтра</param>
            <param name="filterId">Идентификатор фильтра</param>
            <param name="fcl">Список фильтров для колонки</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetColumNameByFilter(System.Int32)">
            <summary>
            Получает имя колонки из фильтра
            </summary>
            <param name="filterId">Идентификатор фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetTypeFilter(MentolVKS.Model.Filters.TypeSelectFilter)">
            <summary>
            Получает тип фильтра
            </summary>
            <param name="typeFilter">dto фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetActiveStringFilter(MentolVKS.Model.Filters.TypeSelectFilter)">
            <summary>
            Получение активного строкового фильтра пользователя
            </summary>
            <param name="typeFilter">dto фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetActiveIntegerFilter(MentolVKS.Model.Filters.TypeSelectFilter)">
            <summary>
            Получение активного числового фильтра пользователя
            </summary>
            <param name="typeFilter">dto фильтра</param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetActiveDateFilter(MentolVKS.Model.Filters.TypeSelectFilter)">
            <summary>
            Получает фильтр даты
            </summary>
            <param name="typeFilter">dto фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.GetActiveTimeFilter(MentolVKS.Model.Filters.TypeSelectFilter)">
            <summary>
            Получает фильтр времени
            </summary>
            <param name="typeFilter">dto фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.RenameFilter(MentolVKS.Model.Filters.RenameFilter)">
            <summary>
            Меняет имя фильтра
            </summary>
            <param name="renameFilter">dto изменения имени фильтра</param>
        </member>
        <member name="M:MentolVKS.Controllers.SelectFilterController.DeleteFilter(System.Int32)">
            <summary>
            Удаляет фильтра
            </summary>
            <param name="filterId">Идентификатор фильтра</param>
        </member>
        <member name="T:MentolVKS.Controllers.SpaceController">
            <summary>
            Бронирование - Комнаты
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.SpaceController.Get(System.Int32)">
            <summary>
            Получить комнату
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SpaceController.Post(MentolVKS.Models.SpacePostViewModel)">
            <summary>
            Добавить комнату
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SpaceController.Put(MentolVKS.Models.SpacePutViewModel)">
            <summary>
            Обнавить комнату
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.SpaceController.Delete(System.Int32)">
            <summary>
            Удалить комнату
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:MentolVKS.Controllers.TestController">
            <summary>
            Контроллер для теста
            </summary>
        </member>
        <member name="T:MentolVKS.Controllers.UserManagerController">
            <summary>
            Контроллер для теста
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.GetUser(System.Int32)">
            <summary>
            Получить пользователя по ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.GetUser(System.String)">
            <summary>
            Найти пользователя в каталоге Ldap
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.PostUser(MentolVKS.Models.UserPostModel)">
            <summary>
            Добавить пользователя
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.PutUser(MentolVKS.Models.UserPutModel)">
            <summary>
            Обновить пользователя
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.DeleteUser(System.Int32)">
            <summary>
            Удалить пользователя
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.GetUserRoles(System.Int32)">
            <summary>
            получить все роли пользователя
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:MentolVKS.Controllers.UserManagerController.PostUserRoles(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Обновить роли пользователя
            </summary>
            <param name="userRoles"></param>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Controllers.VksUserController">
            <summary>
            Контроллер для теста
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.VksUserController.Get(System.Int32)">
            <summary>
            Получить участника
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Controllers.VksUserOtherController">
            <summary>
            Контроллер для теста
            </summary>
        </member>
        <member name="M:MentolVKS.Controllers.VksUserOtherController.Get(System.Int32)">
            <summary>
            Получить участника
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:MentolVKS.Models.BookingFullViewModel">
            <summary>
            Модель данных для Get-запросов.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.BookingFullViewModel.LinkBookingToParticipants">
            <summary>
            Участники.
            </summary>
        </member>
        <member name="T:MentolVKS.Models.BookingPostViewModel">
            <summary>
            Модель данных для POST-запросов.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.BookingPostViewModel.LinkBookingToVksUsersOthers">
            <summary>
            Внешние участники.
            </summary>
        </member>
        <member name="T:MentolVKS.Models.BookingPutViewModel">
            <summary>
            Модель данных для PUT-запросов.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.BookingPutViewModel.Id">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="T:MentolVKS.Models.LinkBookingToParticipantPostViewModel">
            <summary>
            Модель связи бронирования с участником.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToParticipantPostViewModel.VksParticipantId">
            <summary>
            Идентификатор участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToParticipantPostViewModel.Uri">
            <summary>
            Ссылка на участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToParticipantPostViewModel.CallLegProfileGuid">
            <summary>
            Идентификатор профиля.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToParticipantPostViewModel.Email">
            <summary>
            Эелктронный адрес участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToParticipantPostViewModel.VksUserName">
            <summary>
            Имя участника.
            </summary>
        </member>
        <member name="T:MentolVKS.Models.LinkBookingToVksUsersOtherViewModel">
            <summary>
            Модель связи бронирования с внешним участником.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToVksUsersOtherViewModel.VksUsersOtherId">
            <summary>
            Идентификатор участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToVksUsersOtherViewModel.VksUserOtherName">
            <summary>
            Имя участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToVksUsersOtherViewModel.Uri">
            <summary>
            Ссылка на участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.LinkBookingToVksUsersOtherViewModel.Email">
            <summary>
            Электронный адрес участника.
            </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.Name">
            <summary>
            значение из интерфейса встречи "Тема"
            </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.Location">
            <summary>
            значение из интерфейса встречи "Место"
            </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.DateStart">
             <summary>
            значение из интерфейса встречи "Время начала"
             </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.ConnectionTypeId">
            <summary>
            задачется в интерфейсе, наша настройка параметра "Тип подключения"
            </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.Ics">
            <summary>
            ICS файл для разбора расписания
            </summary>
        </member>
        <member name="P:MentolVKS.Models.OutlookBookingPostModel.Uid">
            <summary>
            Уникальный ID календаря
            </summary>
        </member>
        <member name="T:MentolVKS.Models.RecordingVksUsersPostViewModel">
            <summary>
            Модель для POST-запросов
            </summary>
        </member>
        <member name="T:MentolVKS.Models.RecordingVksUsersPutViewModel">
            <summary>
            Модель для PUT-запросов
            </summary>
        </member>
        <member name="T:MentolVKS.Models.VksUserPutViewModel">
            <summary>
            Модель демонстрации информации об участнике бронирования
            </summary>
        </member>
        <member name="P:MentolVKS.Models.VksUserPutViewModel.VksUserName">
            <summary>
            Имя участника
            </summary>
        </member>
        <member name="P:MentolVKS.Models.VksUserPutViewModel.Uri">
            <summary>
            Uri участника (в базе как Phone)
            </summary>
        </member>
        <member name="P:MentolVKS.Models.VksUserPutViewModel.Email">
            <summary>
            Электронный адрес участника
            </summary>
        </member>
        <member name="T:MentolVKS.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:MentolVKS.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:MentolVKS.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="P:MentolVKS.Startup.Configuration">
            <summary>
            Конфиг
            </summary>
        </member>
        <member name="F:MentolVKS.Startup.MyAllowSpecificOrigins">
            <summary>
            Имя настроек CORS
            </summary>
        </member>
        <member name="M:MentolVKS.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            TODO
            </summary>
            <param name="configuration"></param>
            <param name="env"></param>
        </member>
        <member name="M:MentolVKS.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            TODO
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:MentolVKS.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILogger{MentolVKS.Startup})">
            <summary>
            TODO
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
